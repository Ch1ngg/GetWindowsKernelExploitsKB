using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Text;
using System.Text.RegularExpressions;

namespace GetWindowsKernelExploitsKB
{
    class Program
    {
        static void Main()
        {
            Console.WriteLine("----GetWindowsKernelExploitsKB By:Ch1ng----");
            Console.WriteLine("----    Email:ch1ngsec@outlook.com     ----");
            Console.WriteLine("正在获取补丁信息请稍等。。。\n\r");
            Dictionary<string, string> kb_num = new Dictionary<string, string>();
            kb_num.Add("KB4013081", "MS17-017");
            kb_num.Add("KB4013389", "MS17-010");
            kb_num.Add("KB3199135", "MS16-135");
            kb_num.Add("KB3186973", "MS16-111");
            kb_num.Add("KB3178466", "MS16-098");
            kb_num.Add("KB3164038", "MS16-075");
            kb_num.Add("KB3143145", "MS16-034");
            kb_num.Add("KB3143141", "MS16-032");
            kb_num.Add("KB3136041", "MS16-016");
            kb_num.Add("K3134228", "MS16-014");
            kb_num.Add("KB3089656", "MS15-097");
            kb_num.Add("KB3067505", "MS15-076");
            kb_num.Add("KB3077657", "MS15-077");
            kb_num.Add("KB3057839", "MS15-061");
            kb_num.Add("KB3057191", "MS15-051");
            kb_num.Add("KB3031432", "MS15-015");
            kb_num.Add("KB3036220", "MS15-010");
            kb_num.Add("KB3023266", "MS15-001");
            kb_num.Add("KB2989935", "MS14-070");
            kb_num.Add("KB3011780", "MS14-068");
            kb_num.Add("KB3000061", "MS14-058");
            kb_num.Add("KB2992611", "MS14-066");
            kb_num.Add("KB2975684", "MS14-040");
            kb_num.Add("KB2914368", "MS14-002");
            kb_num.Add("KB2850851", "MS13-053");
            kb_num.Add("KB2840221", "MS13-046");
            kb_num.Add("KB2778930", "MS13-005");
            kb_num.Add("KB2972621", "MS12-042");
            kb_num.Add("KB2671387", "MS12-020");
            kb_num.Add("KB2592799", "MS11-080");
            kb_num.Add("KB2566454", "MS11-062");
            kb_num.Add("KB2503665", "MS11-046");
            kb_num.Add("KB2393802", "MS11-011");
            kb_num.Add("KB2305420", "MS10-092");
            kb_num.Add("KB2267960", "MS10-065");
            kb_num.Add("KB982799", "MS10-059");
            kb_num.Add("KB2160329", "MS10-048");
            kb_num.Add("KB977165", "MS10-015");
            kb_num.Add("KB971468", "MS10-012");
            kb_num.Add("KB975517", "MS09-050");
            kb_num.Add("KB970483", "MS09-020");
            kb_num.Add("KB959454", "MS09-012");
            kb_num.Add("KB957097", "MS08-068");
            kb_num.Add("KB958644", "MS08-067");
            kb_num.Add("KB956803", "MS08-066");
            kb_num.Add("KB941693", "MS08-025");
            kb_num.Add("KB921883", "MS06-040");
            kb_num.Add("KB899588", "MS05-039");
            kb_num.Add("KB823980", "MS03-026");
            var kb_exp = new List<string> { "KB4013081", "KB4013389", "KB3199135", "KB3186973", "KB3178466", "KB3164038", "KB3143145", "KB3143141", "KB3136041", "K3134228", "KB3089656", "KB3067505", "KB3077657", "KB3057839", "KB3057191", "KB3031432", "KB3036220", "KB3023266", "KB2989935", "KB3011780", "KB3000061", "KB2992611", "KB2975684", "KB2914368", "KB2850851", "KB2840221", "KB2778930", "KB2972621", "KB2671387", "KB2592799", "KB2566454", "KB2503665", "KB2393802", "KB2305420", "KB2267960", "KB982799", "KB2160329", "KB977165", "KB971468", "KB975517", "KB970483", "KB959454", "KB957097", "KB958644", "KB956803", "KB941693", "KB921883", "KB899588", "KB823980" };
            var sys_kb = new List<string> {};
            Cmd c = new Cmd();
            string all = c.RunCmd("systeminfo | findstr \"KB\"");
            Regex re = new Regex(@"]: (.*)", RegexOptions.Multiline);
            MatchCollection mc = re.Matches(all);
            foreach (Match ma in mc)
            {
                sys_kb.Add(ma.ToString().Replace("]: ", ""));
    
            }
            Console.WriteLine("获取到以下信息：");
            foreach (var item in kb_exp)
            {
                if (!sys_kb.Contains(item))
                {
                    Console.WriteLine("KB号:"+item+"    MS号:"+ kb_num[item]);
                }
            }
            Console.ReadLine();
        }
    }

    /// <summary>
    /// Cmd 的摘要说明。
    /// </summary>
    public class Cmd
    {
        private Process proc = null;
        /// <summary>
        /// 构造方法
        /// </summary>
        public Cmd()
        {
            proc = new Process();
        }
        /// <summary>
        /// 执行CMD语句
        /// </summary>
        /// <param name="cmd">要执行的CMD命令</param>
        public string RunCmd(string cmd)
        {
            proc.StartInfo.CreateNoWindow = true;
            proc.StartInfo.FileName = "cmd.exe";
            proc.StartInfo.UseShellExecute = false;
            proc.StartInfo.RedirectStandardError = true;
            proc.StartInfo.RedirectStandardInput = true;
            proc.StartInfo.RedirectStandardOutput = true;
            proc.Start();
            proc.StandardInput.WriteLine(cmd);
            proc.StandardInput.WriteLine("exit");
            string outStr = proc.StandardOutput.ReadToEnd();
            proc.Close();
            return outStr;
        }
    }
}
